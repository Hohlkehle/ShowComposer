<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Gui="clr-namespace:ShowComposer.NAudioDemo.Gui" x:Class="ShowComposer.UserControls.AudioPlaybackControlBig" 
             mc:Ignorable="d" Height="66.75" Width="424.992">
    <UserControl.Resources>
        <!-- EndRegion -->

        <!-- EndRegion -->

        <!-- EndRegion -->

        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FF444444</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"  EndPoint="0.5,1"  StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"  Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"  Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF" Offset="0" />
                    <GradientStop Color="#600000FF"  Offset="0.4" />
                    <GradientStop Color="#600000FF"  Offset="0.6" />
                    <GradientStop Color="#000000FF"  Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="2" StrokeThickness="1"   Stroke="#60000000" StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Region Buttons -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="MinHeight"  Value="20" />
            <Setter Property="MinWidth" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"  x:Name="Border"  CornerRadius="30"   BorderThickness="1" Margin="0,0,6,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"  EndPoint="0,1" Opacity="100">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#FF2F2F32" Offset="0.0" />
                                            <GradientStop Color="#FF2F2F32" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="10">
                                    <GradientStop Color="#E14E4E5D" Offset="0" />
                                    <GradientStop Color="#9949495D" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0"  To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)"  Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0"  Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"  Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="1" HorizontalAlignment="Center" VerticalAlignment="Top" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault" Value="true">
                                <Setter TargetName="Border"  Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"  Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Region ProgressBars -->
        <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Border BorderBrush="#BBC6C4" BorderThickness="0" CornerRadius="0" Padding="0">
                            <Grid x:Name="PART_Track" >
                                <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" RadiusX="0" RadiusY="5">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="1,0">
                                            <!--FF1D5666-->
                                            <GradientStop Color="#FF09B6FF" Offset="1"/>
                                            <GradientStop Color="#3582D8"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ProgressBar}" x:Key="FlatStyleButton">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF333333" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="CornflowerBlue" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="White" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Region Sliders -->
        <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="CornflowerBlue" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Foreground.Color" To="White" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Width" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse" StrokeThickness="0">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#3582D8" Offset="1" />
                                    <GradientStop Color="#3582D8" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)"
        										Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).                     (GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
        				MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
        			SnapsToDevicePixels="True"
        			Placement="Top"
        			Height="4"
        			Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
        			Margin="0"
        			CornerRadius="2"
        			Height="4"
        			Grid.Row="1"
        			BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
        					EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
        								Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
        								Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
        					EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
        								Offset="0.0" />
                                    <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
        								Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
        			x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
        					Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
        					Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
        			SnapsToDevicePixels="True"
        			Grid.Row="2"
        			Fill="{TemplateBinding Foreground}"
        			Placement="Bottom"
        			Height="4"
        			Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--Template when the orientation of the Slider is Vertical.-->
        <ControlTemplate x:Key="VerticalSlider"
                 TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
        				MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
        			SnapsToDevicePixels="True"
        			Placement="Left"
        			Width="4"
        			Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border x:Name="TrackBackground"
        			Margin="0"
        			CornerRadius="2"
        			Width="4"
        			Grid.Column="1"
        			BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
        					EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
        								Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
        								Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0"
        					StartPoint="0.25,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
        						Offset="0" />
                            <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
        						Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Column="1"
        			x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
        					Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
        					Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
        			SnapsToDevicePixels="True"
        			Grid.Column="2"
        			Fill="{TemplateBinding Foreground}"
        			Placement="Right"
        			Width="4"
        			Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
             Value="TopLeft">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="BottomRight">
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
             Value="Both">
                    <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                    <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Horizontal">
                    <Setter Property="MinWidth"
              Value="104" />
                    <Setter Property="MinHeight"
              Value="21" />
                    <Setter Property="Template"
              Value="{StaticResource HorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="MinWidth"
              Value="21" />
                    <Setter Property="MinHeight"
              Value="104" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Margin="0,0,0,0" Height="27" VerticalAlignment="Top" HorizontalAlignment="Left" Width="30" DragEnter="myGrid_DragEnter" DragLeave="myGrid_DragLeave" Drop="myGrid_Drop">
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="_Properties" x:Name="AudioPlaybackShowProperties" Click="AudioPlaybackShowProperties_Click"/>
                <MenuItem Header="_Exclusive" x:Name="AudioPlaybackExclusive" IsCheckable="True" IsChecked="{Binding PlacementTarget.IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" 
					Checked="AudioPlaybackExclusive_Checked" Unchecked="AudioPlaybackExclusive_Unchecked"  />
                <MenuItem Header="_Open Containing Folder" x:Name="MenuItemOpenContainingFolder" Click="MenuItemOpenContainingFolder_Click"/>

            </ContextMenu>
        </Grid.ContextMenu>

        <Border x:Name="BorderContour" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" BorderThickness="2" Visibility="Hidden" Margin="0,4,-395,-34"/>
        <Border x:Name="BorderBackground" BorderBrush="#E1141418" BorderThickness="1,1,1,1" Margin="8,15,-395,-24" Background="#C8141418" />

        <Gui:VolumeMeter x:Name="volumeMeter1" HorizontalAlignment="Left" Height="45" Margin="10,10,-19,-28" VerticalAlignment="Top" Width="39"/>


        <Button Command="{Binding PlayCommand}" x:Name="ButtonPlayCommand" ToolTip="Play" Visibility="Visible" Click="ButtonPlayCommand_Click" Margin="0,4,-35,-34" Background="#E1141418" >
            <Image Source="/ShowComposer;component/Images/button-play-icon.png"/>
        </Button>
        <Button Command="{Binding StopCommand}"  x:Name="ButtonPauseCommand" ToolTip="Pause" Visibility="Collapsed" Click="ButtonPauseCommand_Click" Margin="0,4,-35,-34" Background="#E1141418" >
            <Image Source="/ShowComposer;component/Images/button-pause-icon.png"/>
        </Button>
        <Button Command="{Binding StopCommand}"  x:Name="ButtonStopCommand" ToolTip="Stop" Visibility="Visible" Click="ButtonStopCommand_Click" Margin="62,32,-67,-34"  >
            <Image Source="/ShowComposer;component/Images/button-stop-icon.png"/>
        </Button>
        <Button Command="{Binding StopCommand}"  x:Name="ButtonPlay1Command" ToolTip="Play Fadein" Visibility="Collapsed" Click="ButtonPlay1Command_Click" Margin="55,4,-52,2"  >
            <Image Source="/ShowComposer;component/Images/button-play-icon.png"/>
        </Button>
        <Button Command="{Binding StopCommand}"  x:Name="ButtonPause1Command" ToolTip="Pause Fadeout" Visibility="Collapsed" Click="ButtonPause1Command_Click" Margin="55,4,-52,2"  >
            <Image Source="/ShowComposer;component/Images/button-pause-icon.png"/>
        </Button>
        <Button Command="{Binding StopCommand}"  x:Name="ButtonCloseCommand" ToolTip="Remove" Visibility="Visible" Click="ButtonCloseCommand_Click" Margin="410,1,-415,-3"  >
            <Image Source="/ShowComposer;component/Images/1474559200_cancel_white.png"/>
        </Button>

        <Slider Margin="130,29,-252,-24" x:Name="SliderSeek" Value="0" Thumb.DragStarted="SliderSeek_ThumbDragStarted" Thumb.DragCompleted="SliderSeek_ThumbDragCompleted" PreviewMouseUp="SliderSeek_PreviewMouseUp" PreviewMouseDown="SliderSeek_PreviewMouseDown" ValueChanged="SliderSeek_ValueChanged" Maximum="100" LargeChange="0.5" TickFrequency="0.5" />



        <Slider Margin="317,29,-392,-24" x:Name="SliderVolume" ValueChanged="SliderVolume_ValueChanged" Maximum="1" LargeChange="0.2" TickFrequency="0.1" Value="0.5"/>

        <ProgressBar x:Name="ProgressBarPosition" Margin="131,38,-249,-15" Visibility="Visible" IsHitTestVisible="False" Value="0" Style="{StaticResource ProgressBarStyle}" />
        <ProgressBar x:Name="ProgressBarVolume" Margin="318,37,-391,-16" Visibility="Visible" IsHitTestVisible="False" Value="0.5" Style="{StaticResource ProgressBarStyle}" Maximum="1" LargeChange="0.2"/>

        <TextBlock x:Name="TextBlockPlayedTime" HorizontalAlignment="Left" Margin="93,33,-96,-18" TextWrapping="Wrap" Text="00:00" VerticalAlignment="Top" Height="12" Width="33" FontFamily="Arial Rounded MT Bold" FontWeight="Bold" TextAlignment="Right" FontSize="11" Foreground="#FF8390CD"/>
        <TextBlock x:Name="TextBlockTotalTime" HorizontalAlignment="Left" Margin="281,34,-284,-19" TextWrapping="Wrap" Text="03:00" VerticalAlignment="Top" Height="12" Width="33" FontFamily="Arial Rounded MT Bold" FontWeight="Bold" TextAlignment="Right" FontSize="11" Foreground="#FF8390CD"/>
        <TextBlock x:Name="TextBlockTrackTitle" HorizontalAlignment="Left" Margin="93,16,-373,-3" Text="16. Marina ок The Diamonds - Primadonna" VerticalAlignment="Top" Height="14" Width="310" FontFamily="Microsoft Sans Serif" Foreground="#FFC3D3E4" FontWeight="Bold" FontSize="12.5" />
        <Gui:WaveformPainter x:Name="WaveformPainter1" Visibility="Collapsed" HorizontalAlignment="Left" Height="56" Margin="0,66,-395,-95" VerticalAlignment="Top" Width="425"/>


        <!-- Region -->
        <!--  <Button Command="{Binding PlayCommand}" x:Name="ButtonPlayCommand" ToolTip="Play" Visibility="Visible" Click="ButtonPlayCommand_Click"  >
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Source="/ShowComposer;component/Images/button-play.png">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="Source" Value="/ShowComposer;component/Images/button-play.png">
                                            <Setter Property = "Visibility" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="Source" Value="/ShowComposer;component/Images/button-play.png">
                                            <Setter Property = "Visibility" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="Source" Value="/ShowComposer;component/Images/button-play.png">
                                            <Setter Property = "Visibility" Value="Visible"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button> -->
        <!--endregion-->
    </Grid>

</UserControl>
